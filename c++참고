vector
vector<vector<int>> board nxn벡티이면 board.size()=n이다...
vector<int> arr(n+1,1); 백터 1로 초기화
sort(a.begin(),a.end()) end다 기억하자

*max_element(v.begin(), v.end());
max_element(v.begin(), v.end()) - v.begin();가장 큰 수의 인덱스

sort(answer.begin(),answer.end()); 
백터.erase(unique(s.begin(),s.end()),s.end()) 중복제거
copy(arr1.begin(), arr1.end(), arr2.begin()); 백터복사
sort(arr, arr+3, greater<>());내림차순 정렬
v.erase(v.begin()); (무조건 위치 이런걸로 해야한다.)
v.erase(v.begin()+1, v.begin()+4);  1 <= 삭제 < 4
v.insert(v.begin(), 1)


hash
unordered_map<string, int> temp; 중복허용 x
temp.insert(make_pair(gems[i],0);

string
str[i] = toupper(str[i]);대문자 만들기
str[i] = tolower(str[i];)소문자 만들기
string to int stoi(a)
int to string to_string(a)
printf가 안먹힘 cout<<으로 해야함

priority_queue(우선 순위 큐)heap이라 push pop이 가벼움
priority_queue<int, vector<int>, greater<int>> pq; 오름차순
priority_queue<int> pq; 내림차순
pq.top()위에꺼 pq.pop()위에꺼 없애기

set 
존재여부 판단 s.count(key) 1이면 존재 0이면 존재하지않음 map이나 hash도 될지도?

ios::sync_with_stdio(false);//iostream에서 cin cout을 더 빠르게 해준다.iostream 함수인 cin/ cout을 stdio 함수인 getchar()등을 쓰면 안된다.
cin.tie(0);//무슨 버퍼 비우는 용도라는데 먼지는 모르겟다

